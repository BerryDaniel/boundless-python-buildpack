# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

[ ! ${FRESH_PYTHON:-} ] && bpwatch start pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch start pip_install_first

if test -d $BUILD_DIR/vendor; then
  /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --no-index --find-links=file://$BUILD_DIR/vendor | cleanup | indent

  cp requirements.txt .heroku/python/requirements-declared.txt
  /app/.heroku/python/bin/pip freeze --find-links=file://$BUILD_DIR/vendor --disable-pip-version-check > .heroku/python/requirements-installed.txt
else
  if test cf/requirements.txt; then
    puts-step "Cloud Foundry requirements found in cf directory"
    /app/.heroku/python/bin/pip install -r cf/requirements.txt --exists-action=w --src=./.heroku/src | cleanup | indent
    cp cf/requirements.txt .heroku/python/requirements-declared.txt
    /app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt
  else
    /app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src | cleanup | indent
    cp requirements.txt .heroku/python/requirements-declared.txt
    /app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt
  fi
fi

[ ! ${FRESH_PYTHON:-} ] && bpwatch stop pip_install
[ ${FRESH_PYTHON:-} ] && bpwatch stop pip_install_first

echo
